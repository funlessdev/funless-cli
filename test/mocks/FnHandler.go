// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	http "net/http"
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// FnHandler is an autogenerated mock type for the FnHandler type
type FnHandler struct {
	mock.Mock
}

// Invoke provides a mock function with given fields: fnName
func (_m *FnHandler) Invoke(fnName string) (*http.Response, error) {
	ret := _m.Called(fnName)

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(string) *http.Response); ok {
		r0 = rf(fnName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(fnName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewFnHandler creates a new instance of FnHandler. It also registers a cleanup function to assert the mocks expectations.
func NewFnHandler(t testing.TB) *FnHandler {
	mock := &FnHandler{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
